#include <stdio.h>
int partition(int A[], int low, int high) {
    int pivot = A[high];
    int i = low - 1;
    int j;
    for (j = low; j < high; j++) {
        if (A[j] < pivot) { 
            i++;
            
            int temp = A[i];
            A[i] = A[j];
            A[j] = temp;
        }
    }
    
    int temp = A[i + 1];
    A[i + 1] = A[high];
    A[high] = temp;
    
    return i + 1;
}


void quickSort(int A[], int low, int high) {
    if (low < high) {
        int pi = partition(A, low, high);
        quickSort(A, low, pi - 1);
        quickSort(A, pi + 1, high);
    }
}

int main() {
    int len;
    printf("Enter the length of the array: ");
    scanf("%d", &len);

    int A[len]; 
    int i;
    printf("Enter array elements: ");
    for (i = 0; i < len; i++) {
        scanf("%d", &A[i]);
    }

    printf("Before Quick Sort: ");
    for (i = 0; i < len; i++) {
        printf("%d ", A[i]);
    }
    printf("\n");

    
    quickSort(A, 0, len - 1);

    printf("After Quick Sort: ");
    for (i = 0; i < len; i++) {
        printf("%d ", A[i]);
    }
    printf("\n");

    return 0;
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

OUTPUT

Enter the length of the array: 8
Enter array elements: 35 20 25 15 80 50 90 45
Before Quick Sort: 35 20 25 15 80 50 90 45 
After Quick Sort: 15 20 25 35 45 50 80 90 
